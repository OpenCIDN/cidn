services:
  minio:
    restart: unless-stopped
    image: m.daocloud.io/quay.io/minio/minio:RELEASE.2025-05-24T17-08-30Z
    entrypoint:
    - sh
    command:
    - -c
    - |-
      (
        while true; do
            mc alias set local http://127.0.0.1:9000 minioadmin minioadmin && break
            sleep 2
        done

        mc mb local/myminio
      ) &
      /usr/bin/docker-entrypoint.sh server /data --console-address ":9001"
    ports:
    - 9000:9000
    - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      controller-tier: {}
      runner-tier: {}
    volumes:
    - cache-data:/data
  etcd:
    restart: unless-stopped
    image: m.daocloud.io/quay.io/coreos/etcd:v3.6.1
    command:
    - /usr/local/bin/etcd
    - --name=node0
    - --auto-compaction-retention=1
    - --quota-backend-bytes=8589934592
    - --data-dir=/var/lib/etcd
    - --initial-advertise-peer-urls=http://0.0.0.0:2380
    - --listen-peer-urls=http://0.0.0.0:2380
    - --advertise-client-urls=http://0.0.0.0:2379
    - --listen-client-urls=http://0.0.0.0:2379
    - --initial-cluster=node0=http://0.0.0.0:2380
    networks:
      controller-tier: {}
    volumes:
    - db-data:/var/lib/etcd
  apiserver:
    restart: unless-stopped
    build:
      context: .
      dockerfile: images/apiserver/Dockerfile
    depends_on:
      etcd:
        condition: service_started
        restart: true
    command:
    - --etcd-servers=http://etcd:2379
    ports:
    - "6443:6443"
    networks:
      controller-tier: {}
      runner-tier: {}
  controller-manager:
    restart: unless-stopped
    build:
      context: .
      dockerfile: images/controller-manager/Dockerfile
    depends_on:
      apiserver:
        condition: service_started
        restart: true
    command:
    - --kubeconfig=/kubeconfig.local.yaml
    - --master=https://apiserver:6443
    - --storage-url=minio://minioadmin:minioadmin@myminio.us-east-1?forcepathstyle=true&secure=false&chunksize=104857600&regionendpoint=http://minio:9000
    volumes:
    - ./kubeconfig.local.yaml:/kubeconfig.local.yaml:ro
    networks:
      controller-tier: {}
  runner:
    restart: unless-stopped
    build:
      context: .
      dockerfile: images/runner/Dockerfile
    depends_on:
      apiserver:
        condition: service_started
        restart: true
      minio:
        condition: service_started
        restart: true
      nginx-test:
        condition: service_started
        restart: true
    command:
    - --kubeconfig=/kubeconfig.local.yaml
    - --master=https://apiserver:6443
    volumes:
    - ./kubeconfig.local.yaml:/kubeconfig.local.yaml:ro
    deploy:
      replicas: 3
    networks:
      runner-tier: {}
  webui:
    restart: unless-stopped
    build:
      context: .
      dockerfile: images/webui/Dockerfile
    depends_on:
      apiserver:
        condition: service_started
        restart: true
    command:
    - --kubeconfig=/kubeconfig.local.yaml
    - --master=https://apiserver:6443
    - --port=8080
    volumes:
    - ./kubeconfig.local.yaml:/kubeconfig.local.yaml:ro
    ports:
    - "8080:8080"
    networks:
      controller-tier: {}
  nginx-test:
    restart: unless-stopped
    image: m.daocloud.io/docker.io/nginx:alpine
    volumes:
    - ./static:/usr/share/nginx/html:ro
    configs:
    - source: nginx-test-config
      target: /etc/nginx/conf.d/default.conf
      mode: 0440
    networks:
      runner-tier: {}
configs:
  nginx-test-config:
    content: |-
      server {
        listen 80;
        location / {
          limit_rate 1m;
          root   /usr/share/nginx/html;
          index  index.html index.htm;
        }
      }
networks:
  controller-tier: {}
  runner-tier: {}
volumes:
  cache-data: {}
  db-data: {}
