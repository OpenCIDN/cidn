//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The OpenCIDN Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bearer) DeepCopyInto(out *Bearer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bearer.
func (in *Bearer) DeepCopy() *Bearer {
	if in == nil {
		return nil
	}
	out := new(Bearer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Bearer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BearerList) DeepCopyInto(out *BearerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Bearer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BearerList.
func (in *BearerList) DeepCopy() *BearerList {
	if in == nil {
		return nil
	}
	out := new(BearerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BearerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BearerSpec) DeepCopyInto(out *BearerSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BearerSpec.
func (in *BearerSpec) DeepCopy() *BearerSpec {
	if in == nil {
		return nil
	}
	out := new(BearerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BearerStatus) DeepCopyInto(out *BearerStatus) {
	*out = *in
	if in.TokenInfo != nil {
		in, out := &in.TokenInfo, &out.TokenInfo
		*out = new(BearerTokenInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BearerStatus.
func (in *BearerStatus) DeepCopy() *BearerStatus {
	if in == nil {
		return nil
	}
	out := new(BearerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BearerTokenInfo) DeepCopyInto(out *BearerTokenInfo) {
	*out = *in
	in.IssuedAt.DeepCopyInto(&out.IssuedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BearerTokenInfo.
func (in *BearerTokenInfo) DeepCopy() *BearerTokenInfo {
	if in == nil {
		return nil
	}
	out := new(BearerTokenInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Blob) DeepCopyInto(out *Blob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Blob.
func (in *Blob) DeepCopy() *Blob {
	if in == nil {
		return nil
	}
	out := new(Blob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Blob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobDestination) DeepCopyInto(out *BlobDestination) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobDestination.
func (in *BlobDestination) DeepCopy() *BlobDestination {
	if in == nil {
		return nil
	}
	out := new(BlobDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobList) DeepCopyInto(out *BlobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Blob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobList.
func (in *BlobList) DeepCopy() *BlobList {
	if in == nil {
		return nil
	}
	out := new(BlobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobSource) DeepCopyInto(out *BlobSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobSource.
func (in *BlobSource) DeepCopy() *BlobSource {
	if in == nil {
		return nil
	}
	out := new(BlobSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobSpec) DeepCopyInto(out *BlobSpec) {
	*out = *in
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]BlobSource, len(*in))
		copy(*out, *in)
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]BlobDestination, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobSpec.
func (in *BlobSpec) DeepCopy() *BlobSpec {
	if in == nil {
		return nil
	}
	out := new(BlobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobStatus) DeepCopyInto(out *BlobStatus) {
	*out = *in
	if in.UploadIDs != nil {
		in, out := &in.UploadIDs, &out.UploadIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.UploadEtags != nil {
		in, out := &in.UploadEtags, &out.UploadEtags
		*out = make([]UploadEtag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobStatus.
func (in *BlobStatus) DeepCopy() *BlobStatus {
	if in == nil {
		return nil
	}
	out := new(BlobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Chunk) DeepCopyInto(out *Chunk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Chunk.
func (in *Chunk) DeepCopy() *Chunk {
	if in == nil {
		return nil
	}
	out := new(Chunk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Chunk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkHTTP) DeepCopyInto(out *ChunkHTTP) {
	*out = *in
	in.Request.DeepCopyInto(&out.Request)
	in.Response.DeepCopyInto(&out.Response)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkHTTP.
func (in *ChunkHTTP) DeepCopy() *ChunkHTTP {
	if in == nil {
		return nil
	}
	out := new(ChunkHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkHTTPRequest) DeepCopyInto(out *ChunkHTTPRequest) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkHTTPRequest.
func (in *ChunkHTTPRequest) DeepCopy() *ChunkHTTPRequest {
	if in == nil {
		return nil
	}
	out := new(ChunkHTTPRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkHTTPResponse) DeepCopyInto(out *ChunkHTTPResponse) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkHTTPResponse.
func (in *ChunkHTTPResponse) DeepCopy() *ChunkHTTPResponse {
	if in == nil {
		return nil
	}
	out := new(ChunkHTTPResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkList) DeepCopyInto(out *ChunkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Chunk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkList.
func (in *ChunkList) DeepCopy() *ChunkList {
	if in == nil {
		return nil
	}
	out := new(ChunkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChunkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkSpec) DeepCopyInto(out *ChunkSpec) {
	*out = *in
	in.Source.DeepCopyInto(&out.Source)
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]ChunkHTTP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkSpec.
func (in *ChunkSpec) DeepCopy() *ChunkSpec {
	if in == nil {
		return nil
	}
	out := new(ChunkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChunkStatus) DeepCopyInto(out *ChunkStatus) {
	*out = *in
	if in.SourceResponse != nil {
		in, out := &in.SourceResponse, &out.SourceResponse
		*out = new(ChunkHTTPResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseBody != nil {
		in, out := &in.ResponseBody, &out.ResponseBody
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.DestinationProgresses != nil {
		in, out := &in.DestinationProgresses, &out.DestinationProgresses
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Sha256Partial != nil {
		in, out := &in.Sha256Partial, &out.Sha256Partial
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.Etags != nil {
		in, out := &in.Etags, &out.Etags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChunkStatus.
func (in *ChunkStatus) DeepCopy() *ChunkStatus {
	if in == nil {
		return nil
	}
	out := new(ChunkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadEtag) DeepCopyInto(out *UploadEtag) {
	*out = *in
	if in.Etags != nil {
		in, out := &in.Etags, &out.Etags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadEtag.
func (in *UploadEtag) DeepCopy() *UploadEtag {
	if in == nil {
		return nil
	}
	out := new(UploadEtag)
	in.DeepCopyInto(out)
	return out
}
